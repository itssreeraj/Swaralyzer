events {}

http {
  server {
    listen 80;
    server_name localhost;

    # Frontend (React / Next.js etc.)
    location / {
      proxy_pass http://swaralyzer-ui:80;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
    }

    # REST API
    location /api/ {
      client_max_body_size 100M;
      proxy_pass http://swaralyzer-api:8000/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      add_header Access-Control-Allow-Origin *;
      add_header Access-Control-Allow-Headers *;
      add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
      
      if ($request_method = OPTIONS) {
          add_header Access-Control-Allow-Origin *;
          add_header Access-Control-Allow-Headers *;
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          return 204;
      }
    }

    # WebSocket API
    location /ws/ {
      proxy_pass http://swaralyzer-ws:8001/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      # Allow the actual Origin header to pass through
      proxy_set_header Origin $http_origin;
      # Timeouts for long WS connections
      proxy_read_timeout 86400;
      proxy_send_timeout 86400;
      # Add CORS headers
      add_header Access-Control-Allow-Origin "$http_origin" always;
      add_header Access-Control-Allow-Credentials "true" always;
      add_header Access-Control-Allow-Headers "*" always;
      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    }
  }
}